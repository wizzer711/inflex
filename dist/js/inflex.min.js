/*!
 * Inflex v1.1.33 (http://inflex.io)
 * Copyright (c) 2017, Chris Garner
 * Licensed under MIT (https://github.com/chris-garner/inflex/blob/master/LICENSE.md)
 */
var $window=$(window),$document=$(document),$body,inflex={utils:function(){"use strict";function t(t,e,n){var a=new RegExp("\\b"+e+"\\b","g"),i=(t.attr("data-inflex")||"").replace(a,n);t.attr("data-inflex",i)}var e={body:function(){$body=$body||$("body").removeClass("noscript"),"undefined"!=typeof FastClick&&FastClick.attach(document.body)},resize:{timeout:null,listener:function(){var t=this,e=$window.width();$window.on("resize",function(){clearTimeout(t.timeout),$window.width()!==e&&($("[data-inflex-monitor]").attr("data-inflex-monitor","resizing"),e=$window.width()),t.timeout=setTimeout(function(){$document.trigger($.Event("inflex.resized")),$("[data-inflex-monitor]").attr("data-inflex-monitor","")},250)})}},input:{listeners:function(){var t=this;$("input, textarea, select").attr("data-inflex",function(){var e=$(this),n=(e.attr("data-inflex")||"").replace(/\bstate:[0,1]\b/g,"");n+=" state:"+t.state(this,""),e.attr("data-inflex",n.trim().replace(/\s+/g," "))}),$document.on("input change","input, textarea, select",function(){var e=$(this),n=(e.attr("data-inflex")||"").replace(/\bstate:[0,1]\b/g,"");n+=" state:"+t.state(this,0),e.attr("data-inflex",n.replace(/\s+/g," "))})},state:function(t,e){var n=$(t);switch(t.nodeName){case"SELECT":var a=n.find((0===e?":selected":"[selected]")+":first").text();return a.length?1:e;default:return t.value.length?1:e}}},droplet:{listeners:function(){var t=this;$('[data-inflex~="droplet"]').on("click",'[data-inflex~="droplet:toggle"]',function(e){e.stopPropagation();var n=$(e.delegateTarget);t.toggle($('[data-inflex~="droplet:toggled"]'),"droplet:toggled","droplet"),t.toggle(n,"droplet","droplet:toggled"),$document.off("click.offDroplet").on("click.offDroplet",function(e){n.find($(e.target)).length||(t.toggle(n,"droplet:toggled","droplet"),$document.off("click.offDroplet"))})})},toggle:function(t,e,n){t.attr("data-inflex",function(){return $(this).data("inflex").replace(e,n)})}},accordion:{initiate:function(){var t=this;t.listeners(),t.calibration()},listeners:function(){var t=this;$('nav[data-inflex~="accordion"]').on("click",'li[data-inflex~="accordion:parent"] > a span[data-inflex~="accordion:toggle"]',function(e){e.preventDefault(),e.stopPropagation(),t.toggle($(this).parent("a"))}),$('nav[data-inflex~="accordion"]').on("click",'li[data-inflex~="accordion:parent"]:not(.hc-expand) > a',function(e){e.preventDefault(),t.toggle($(this))})},calibration:function(){$('nav[data-inflex~="accordion"] li[data-inflex~="accordion:parent"][data-active]').children("a").click(),$('nav[data-inflex~="accordion"] li[data-active]').parents('li[data-inflex~="accordion:parent"]').children("a").click()},toggle:function(t){var e=t.parents("li:first");inflex.utils.findReplace(e,"accordion:parent","accordion:parent:expand");var n=t.children("span.hc-accordion-toggle"),a=n.data("toggleIcon")||null;if(n.data("toggleIcon")){var i=n.children("i");n.data("toggleIcon",i.text()),i.text(a)}}}};return $(function(){e.body(),e.resize.listener(),e.input.listeners(),e.droplet.listeners(),e.accordion.initiate()}),{findReplace:t}}(document,window,jQuery)};