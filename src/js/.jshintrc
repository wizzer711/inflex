{
    // JSHint Default Configuration File (as on JSHint website)

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Enforcing Options | http://jshint.com/docs/options/#enforcing-options

    "bitwise"       : true,     // This option prohibits the use of bitwise operators such as ^ (XOR), | (OR) and others.
    "camelcase"     : false,    // This option allows you to force all variable names to use either camelCase style or UPPER_CASE with underscores.
    "curly"         : true,     // This option requires you to always put curly braces around blocks in loops and conditionals.
    "eqeqeq"        : true,     // This option prohibits the use of == and != in favor of === and !==.
    "es3"           : false,    // This option tells JSHint that your code needs to adhere to ECMAScript 3 specification. 
    "forin"         : false,    // This option requires all for in loops to filter object's items.
    "freeze"        : true,     // This option prohibits overwriting prototypes of native objects such as Array, Date and so on.
    "immed"         : false,    // This option prohibits the use of immediate function invocations without wrapping them in parentheses.
    "indent"        : 4,        // This option sets a specific tab width for your code.
    "latedef"       : true,     // This option prohibits the use of a variable before it was defined.
    "maxcomplexity" : false,    // This option lets you control cyclomatic complexity throughout your code.
    "maxdepth"      : false,    // This option lets you control how nested do you want your blocks to be.
    "maxlen"        : false,    // This option lets you set the maximum length of a line.
    "maxparams"     : false,    // This option lets you set the max number of formal parameters allowed per function.
    "maxstatements" : false,    // This option lets you set the max number of statements allowed per function.
    "newcap"        : true,     // This option requires you to capitalize names of constructor functions.
    "noarg"         : true,     // This option prohibits the use of arguments.caller and arguments.callee.
    "noempty"       : false,    // This option warns when you have an empty block in your code.
    "nonbsp"        : false,    // This option warns about "non-breaking whitespace" characters.
    "nonew"         : true,     // This option prohibits the use of constructor functions for side-effects.
    "plusplus"      : false,    // This option prohibits the use of unary increment and decrement operators.
    "quotmark"      : false,    // This option enforces the consistency of quotation marks used throughout your code.
    "strict"        : false,    // This option requires all functions to run in ECMAScript 5's strict mode.
    "undef"         : true,     // This option prohibits the use of explicitly undeclared variables.
    "unused"        : true,     // This option warns when you define and never use your variables.

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Relaxing Options | http://jshint.com/docs/options/#relaxing-options

    "asi"           : false,    // This option suppresses warnings about missing semicolons.
    "boss"          : false,    // This option suppresses warnings about the use of assignments in cases where comparisons are expected.
    "debug"         : true,     // This option suppresses warnings about the debugger statements in your code.
    "eqnull"        : false,    // This option suppresses warnings about == null comparisons.
    "es5"           : false,    // This option suppresses warnings about ES5 syntax (ex: getters and setters).
    "esnext"        : false,    // This option tells JSHint that your code uses ECMAScript 6 specific syntax.
    "evil"          : false,    // This option suppresses warnings about the use of eval.
    "expr"          : true,     // This option suppresses warnings about the use of expressions where normally you would expect to see assignments or function calls.
    "funcscope"     : false,    // This option suppresses warnings about declaring variables inside of control structures while accessing them later from the outside.
    "globalstrict"  : false,    // This option suppresses warnings about the use of global strict mode.
    "iterator"      : false,    // This option suppresses warnings about the __iterator__ property.
    "lastsemic"     : false,    // This option suppresses warnings about missing semicolons, but only when the semicolon is omitted for the last statement in a one-line block.
    "laxbreak"      : false,    // This option suppresses most of the warnings about possibly unsafe line breakings in your code.
    "laxcomma"      : false,    // This option suppresses warnings about comma-first coding style.
    "loopfunc"      : false,    // This option suppresses warnings about functions inside of loops.
    "maxerr"        : 50,       // This option allows you to set the maximum amount of warnings JSHint will produce before giving up. Default is 50.
    "moz"           : false,    // This option tells JSHint that your code uses Mozilla JavaScript extensions.
    "multistr"      : false,    // This option suppresses warnings about multi-line strings.
    "notypeof"      : true,     // This option suppresses warnings about invalid typeof operator values.
    "noyield"       : false,    // This option suppresses warnings about generator functions with no yield statement in them.
    "proto"         : false,    // This option suppresses warnings about the __proto__ property.
    "scripturl"     : false,    // This option suppresses warnings about the use of script-targeted URLsâ€”such as javascript:...
    "shadow"        : false,    // This option suppresses warnings about variable shadowing i.e. declaring a variable that had been already declared somewhere in the outer scope.
    "sub"           : false,    // This option suppresses warnings about using [] notation when it can be expressed in dot notation: person['name'] vs. person.name.
    "supernew"      : false,    // This option suppresses warnings about "weird" constructions like new function () { ... } and new Object;
    "validthis"     : false,    // This option suppresses warnings about possible strict violations when the code is running in strict mode and you use this in a non-constructor function.

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Environments | http://jshint.com/docs/options/#environments

    "browser"       : true,     // Web Browser (window, document, etc)
    "browserify"    : false,    // Browserify (node.js code in the browser)
    "couch"         : false,    // CouchDB
    "devel"         : true,     // Development/debugging (alert, confirm, etc)
    "dojo"          : false,    // Dojo Toolkit
    "jasmine"       : false,    // Jasmine
    "jquery"        : true,     // jQuery
    "mocha"         : false,    // Mocha
    "mootools"      : false,    // MooTools
    "node"          : false,    // Node.js
    "nonstandard"   : false,    // Widely adopted globals (escape, unescape, etc)
    "prototypejs"   : false,    // Prototype and Scriptaculous
    "qunit"         : false,    // QUnit
    "rhino"         : false,    // Rhino
    "shelljs"       : false,    // ShellJS
    "worker"        : false,    // Web Workers
    "wsh"           : false,    // Windows Scripting Host
    "yui"           : false,    // Yahoo User Interface

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // Custom Globals

    "globals"       : {}        // Additional predefined global variables
}