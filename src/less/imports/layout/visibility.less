// ---------------------------------------------------------------------------------------------------------
// Visibility Mixin
// ---------------------------------------------------------------------------------------------------------

    .iterate-visibility--breakpoints (){

		.iterate();

	    .iterate (@i: length(@breakpoints)) when (@i > 1){

	        .iterate(@i - 1);

	        @breakpoint: extract(@breakpoints, @i);

			@breakpoint-name: extract(@breakpoint, 1);

			@breakpoint-min: extract(@breakpoint, 2);

			@breakpoint-max: extract(@breakpoint, 3);

			// Compose visibility rules

			@media (min-width: @breakpoint-min) and (max-width: @breakpoint-max){

				[data-inflex~='hide(@{breakpoint-name})']{ display: none; }
			}

			@media (min-width: (@breakpoint-max + 0.0625)){ // +1px

				[data-inflex~='hide(gt:@{breakpoint-name})']{ display: none; }
			}

			@media (min-width: @breakpoint-min){

				[data-inflex~='hide(gte:@{breakpoint-name})']{ display: none; }
			}

			@media (max-width: @breakpoint-min){

				[data-inflex~='hide(lt:@{breakpoint-name})']{ display: none; }
			}

			@media (max-width: @breakpoint-max){

				[data-inflex~='hide(lte:@{breakpoint-name})']{ display: none; }
			}
	    }
	}

// ---------------------------------------------------------------------------------------------------------
// Visibility Styles (Compile Once)
// ---------------------------------------------------------------------------------------------------------

	& when (@compile-once){

		[data-inflex~='hide']{ display: none; }

		.iterate-visibility--breakpoints();
	}